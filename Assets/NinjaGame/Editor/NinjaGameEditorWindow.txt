using UnityEngine;
using UnityEditor;
using System.Collections.Generic;
using System.IO;
using System.Linq;


namespace Assets.NinjaGame.Editor
{

	public class NinjaGameEditorWindow : UnityEditor.EditorWindow {
		
	
		List<GuiContainerForScenes> allLevels;
		GUIContent [] listToDisplay;
		public int levelsIndex = 0;
		SerializedObject serializedObject;
		
		
		
		[MenuItem("NinjaGame / ConfigurationWindow")]
		static void Init () {
        // Get existing open window or if none, make a new one:
			NinjaGameEditorWindow window = (NinjaGameEditorWindow) UnityEditor.EditorWindow.GetWindow (typeof (NinjaGameEditorWindow));
			window.Show();
		}
			
		
		internal static List<GuiContainerForScenes> GetAllScenes()
		{
			string[] lookFor = new string[] {"Assets/NinjaGame/Levels"};
			var levelScenes = AssetDatabase.FindAssets ("t:Scene",lookFor).Select(
				guid => {
					
					var path = AssetDatabase.GUIDToAssetPath(guid);
					var name = Path.GetFileNameWithoutExtension(path);
					return new GuiContainerForScenes()
					{
						Name = name,
						Guid = guid,
						Path = path,
						GuiContent = new GUIContent(name)
                };
					
				} ).ToList();
			
			return levelScenes;
		}
		
		void OnEnable()
		{
			allLevels = GetAllScenes();
			var namestoWrite = allLevels.Select(n => n.Name).ToArray();
			listToDisplay =  allLevels.Select(l => l.GuiContent).ToArray();
			
		}

		void OnGUI()
		{
			serializedObject.Update();
			
			GUILayout.Label("Ninja Game Configuration", EditorStyles.boldLabel);
			//GUILayout.Label("Choose level", EditorStyles.boldLabel);
			int heightOfTheSelectedBox = 20;
			levelsIndex = EditorGUI.Popup(new Rect(0, 0, position.width, heightOfTheSelectedBox), new GUIContent( "Available Levels"), levelsIndex, listToDisplay);
			
			Debug.Log("Selected: " + allLevels[levelsIndex].Name);
			
			serializedObject.ApplyModifiedProperties();
				
			GUILayout.Space(20f);
			
			/*if (GUILayout.Button("Ok"))
				//load (first) chossen level
				Application.LoadLevel(levelsList[levelsIndex]);*/
		}

		
		internal class GuiContainerForScenes 
		{	
			public string Name;
			public string Guid;
			public string Path;
			public GUIContent GuiContent;
			
		}
		
	}	
}